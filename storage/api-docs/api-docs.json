{
    "openapi": "3.0.0",
    "info": {
        "title": "Restaurant Management System API",
        "description": "API documentation for Restaurant Management System Backend",
        "contact": {
            "email": "admin@restaurant.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Restaurant Management API Server"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return JWT tokens",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "superadmin@restaurant.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials or account is not active"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Get new access token using refresh token from cookie",
                "operationId": "30c20c52f5f72828d8c531fd7c9ea3e7",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and invalidate tokens",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get current authenticated user information",
                "operationId": "b5de204f5e452ef51327c691aa99e77c",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User data retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/sessions": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user active sessions",
                "description": "Get all active refresh token sessions for the authenticated user",
                "operationId": "e62756fae4af014316d4454265e5c6dc",
                "responses": {
                    "200": {
                        "description": "Sessions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sessions retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/revoke-token/{token_id}": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke specific refresh token",
                "description": "Revoke a specific refresh token",
                "operationId": "bafd63ae7523c6a91e9c40da4823db1f",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "description": "Token ID to revoke",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "description": "Refresh token to revoke",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user account with email verification",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration initiated. Please check your email to verify your account."
                                        },
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User with this email already exists"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify-email": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Complete user registration by verifying email with token",
                "operationId": "f676b2141e851be2e309f8d6286f3467",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Email verification token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully. You can now login."
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "U12345678"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired verification token"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend verification email",
                "description": "Resend email verification for pending registration",
                "operationId": "3a85353b217a52c3c33cd55d6aa38662",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resend failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No pending registration found for this email"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Google OAuth login URL",
                "description": "Generate Google OAuth redirect URL for authentication",
                "operationId": "8df4678baf62905875a8e23f4841a8f0",
                "responses": {
                    "200": {
                        "description": "Google OAuth URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Google OAuth URL generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://accounts.google.com/oauth/authorize..."
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "google"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate Google login URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate Google login URL"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google/callback": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle Google OAuth callback",
                "description": "Process Google OAuth callback and login/register user",
                "operationId": "5512a59fa3748eecf450d0a730224ec2",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "OAuth authorization code from Google",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "OAuth state parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Google OAuth authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful via Google"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "google"
                                                },
                                                "is_new_user": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Google OAuth authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OAuth authentication failed"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Account is inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account is inactive"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "List customers",
                "description": "Retrieve a paginated list of customers with optional filters",
                "operationId": "1b873d7b0c63876f30a978b52c4d24d2",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "full_name",
                        "in": "query",
                        "description": "Filter by customer name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Filter by phone number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Filter by gender",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "male",
                                "female",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "membership_level",
                        "in": "query",
                        "description": "Filter by membership level (1-4)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer by ID",
                "description": "Retrieve a specific customer with their user information",
                "operationId": "d03d1278b7e26322e9a425406bc4e9f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update customer and user account",
                "description": "Update customer profile and optionally update their user account (email, password)",
                "operationId": "32da1527afa82d1a6b0e034146f1032d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "Jane Doe Updated"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0987654321"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "female"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 Customer Ave"
                                    },
                                    "membership_level": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete customer",
                "description": "Delete a customer profile",
                "operationId": "e9f16ac94d63309225711a1f3dfb245a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/{id}/membership": {
            "patch": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update customer membership level",
                "description": "Update the membership level of a customer",
                "operationId": "6f94b5b9b9df648226bcf43d29f43d07",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "membership_level"
                                ],
                                "properties": {
                                    "membership_level": {
                                        "description": "1=Bronze, 2=Silver, 3=Gold, 4=Titanium",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer membership level updated successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dining-tables": {
            "get": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Get all dining tables",
                "description": "Retrieve all dining tables with pagination",
                "operationId": "4a1129114126281176d5499bf6f09039",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dining tables retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dining tables retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "DT001"
                                                            },
                                                            "table_number": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "capacity": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Create new dining table",
                "description": "Create a new dining table",
                "operationId": "614fb302cc3c68f16fe7db1bb6548307",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "table_number",
                                    "capacity"
                                ],
                                "properties": {
                                    "table_number": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 6
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dining table created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dining-tables/{id}": {
            "get": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Get dining table by ID",
                "description": "Retrieve a specific dining table by ID",
                "operationId": "1a1975b8dffbba7663038b317e6d396d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dining Table ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dining table retrieved successfully"
                    },
                    "404": {
                        "description": "Dining table not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Update dining table",
                "description": "Update an existing dining table",
                "operationId": "c14b6d661d7515097dbac1f5f64a600d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dining Table ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_number": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dining table updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Delete dining table",
                "description": "Delete a dining table",
                "operationId": "16e6f81ee11dec72766d5c37acb8edb4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dining Table ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dining table deleted successfully"
                    },
                    "404": {
                        "description": "Dining table not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dining-tables/{idDiningTable}/reservations": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Lấy danh sách các đặt bàn đã có phiên cho một bàn cụ thể",
                "description": "Trả về danh sách tất cả các đặt bàn đã có phiên bàn (table_session) của một bàn cụ thể, bao gồm cả 4 trạng thái: Pending, Active, Completed, Cancelled.",
                "operationId": "2ec5c691dc2c258fb79a184c14e67c88",
                "parameters": [
                    {
                        "name": "idDiningTable",
                        "in": "path",
                        "description": "ID của bàn ăn (dining_table_id)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách đặt bàn được lấy thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy bàn hoặc không có đặt bàn nào"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dish-categories": {
            "get": {
                "tags": [
                    "DishCategories"
                ],
                "summary": "Get all dish categories",
                "description": "Retrieve all dish categories with pagination and optional search by name",
                "operationId": "96e184150190c30ef32b08feef8d6b4d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search by category name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "đồ ăn hàn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dish categories retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "DC001"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Món chính"
                                                            },
                                                            "desc": {
                                                                "type": "string",
                                                                "example": "Các món ăn chính"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-03T12:00:00"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-03T12:00:00"
                                                            },
                                                            "dishes_count": {
                                                                "type": "integer",
                                                                "example": 8
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "DishCategories"
                ],
                "summary": "Create new dish category",
                "description": "Create a new dish category",
                "operationId": "00c5ab6fc8db4b3f783d2dedf229b603",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Khai vị"
                                    },
                                    "desc": {
                                        "type": "string",
                                        "example": "Các món khai vị"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dish category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dish-categories/{id}": {
            "put": {
                "tags": [
                    "DishCategories"
                ],
                "summary": "Update dish category",
                "description": "Update an existing dish category",
                "operationId": "23d8180454aefbac6fee2aa254f3fc4b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dish Category ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Món chính"
                                    },
                                    "desc": {
                                        "type": "string",
                                        "example": "Các món chính"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dish category updated successfully"
                    },
                    "404": {
                        "description": "Dish category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DishCategories"
                ],
                "summary": "Delete dish category",
                "description": "Delete a dish category. If any dishes are linked, deletion is prevented.",
                "operationId": "75fe11d99084cd44b49b75606bc09a68",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dish Category ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish category deleted successfully"
                    },
                    "400": {
                        "description": "Cannot delete category with linked dishes"
                    },
                    "404": {
                        "description": "Dish category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dish-categories/get-name-list-dish-category": {
            "get": {
                "tags": [
                    "DishCategories"
                ],
                "summary": "Lấy danh sách tên danh mục món ăn",
                "description": "Trả về danh sách {id, name} của các danh mục món ăn",
                "operationId": "getNameListDishCategory",
                "responses": {
                    "200": {
                        "description": "Danh sách tên danh mục món ăn",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Món khai vị"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/dishes": {
            "get": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Lấy danh sách món ăn",
                "operationId": "58a29eab9c069960c8ff43b23523c328",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Trang hiện tại",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Số item mỗi trang",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Tìm theo tên món (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Bibimbap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách món ăn"
                    }
                }
            },
            "post": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Tạo mới món ăn",
                "operationId": "b3d8d834f27286c52a589739e4dc128c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "desc": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "string"
                                    },
                                    "cooking_time": {
                                        "type": "integer"
                                    },
                                    "image": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dish created successfully"
                    }
                }
            }
        },
        "/api/dishes/{id}": {
            "put": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Cập nhật món ăn",
                "operationId": "7c98edd0646d2311b25eaadfd8376d2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "desc": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "string"
                                    },
                                    "cooking_time": {
                                        "type": "integer"
                                    },
                                    "image": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dish updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Xóa món ăn",
                "operationId": "8d99defdd758a5929b9317711b3dbd52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish deleted successfully"
                    }
                }
            }
        },
        "/api/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "List employees",
                "description": "Retrieve a paginated list of employees with optional filters",
                "operationId": "b9b73e1873c5fe36b951f014f711e4fa",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "full_name",
                        "in": "query",
                        "description": "Filter by employee name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "contract_type",
                        "in": "query",
                        "description": "Filter by contract type",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Filter by gender",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hire_date_from",
                        "in": "query",
                        "description": "Filter hire date from",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "hire_date_to",
                        "in": "query",
                        "description": "Filter hire date to",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employees retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Create employee with user account",
                "description": "Create a new employee along with their user account for login",
                "operationId": "781d9d682a574c5e2c1dab17f782b5cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "full_name",
                                    "contract_type",
                                    "base_salary",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role_id"
                                ],
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Smith"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "bank_account": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "contract_type": {
                                        "description": "0: Full-time, 1: Part-time",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "base_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2000
                                    },
                                    "hire_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "email": {
                                        "description": "User account email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.smith@restaurant.com"
                                    },
                                    "password": {
                                        "description": "User account password (min 8 chars)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role_id": {
                                        "description": "Role ID for the user account",
                                        "type": "string",
                                        "example": "R-123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully with user account"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get employee details",
                "description": "Retrieve detailed information about a specific employee by ID",
                "operationId": "de09c8d9afb3f7114d227ad0645940ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee retrieved successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update employee and user account",
                "description": "Update employee information and optionally update their user account (email, password, role)",
                "operationId": "55e1ceec679a0d1436c869735e984a83",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Smith Updated"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male|female|other"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "bank_account": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "contract_type": {
                                        "description": "0: Full-time, 1: Part-time",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "base_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2500
                                    },
                                    "hire_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "email": {
                                        "description": "Update user email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@restaurant.com"
                                    },
                                    "password": {
                                        "description": "Update user password (optional)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "role_id": {
                                        "description": "Update user role",
                                        "type": "string",
                                        "example": "R-123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete employee",
                "description": "Delete an employee by ID",
                "operationId": "dc1326c2f6b4bed0201d62396ddfd970",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees/{id}/activate": {
            "patch": {
                "tags": [
                    "Employees"
                ],
                "summary": "Activate or deactivate employee",
                "description": "Toggle the active status of an employee",
                "operationId": "0f54be1eed0dad14c96b438e7f227ed9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "is_active"
                                ],
                                "properties": {
                                    "is_active": {
                                        "description": "Set to true to activate, false to deactivate",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee status updated successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee-shifts": {
            "get": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "List employee shifts",
                "description": "Retrieve a paginated list of employee shift assignments with optional filters",
                "operationId": "362e2a0e9e526810a3aed9fc68a8ed2f",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Filter by employee ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shift_id",
                        "in": "query",
                        "description": "Filter by shift ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter assignments from date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter assignments to date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee shifts retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Assign shift",
                "description": "Assign a shift to an employee (shift must have shift_date set)",
                "operationId": "8738ffd49926ee6f9671729b80dd3dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "employee_id",
                                    "shift_id"
                                ],
                                "properties": {
                                    "employee_id": {
                                        "type": "string",
                                        "example": "EMP001"
                                    },
                                    "shift_id": {
                                        "type": "string",
                                        "example": "SH001"
                                    },
                                    "status": {
                                        "description": "Initial status",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Assigned for breakfast prep"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee shift assigned successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee-shifts/{id}": {
            "get": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Show employee shift",
                "description": "Retrieve details of a specific employee shift assignment",
                "operationId": "4aaefdfe1bdcb40eec3f5012fa03d206",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee shift retrieved successfully"
                    },
                    "404": {
                        "description": "Employee shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Delete employee shift",
                "description": "Remove an employee shift assignment",
                "operationId": "8476be0b9582c11919e96d72fed3f4b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee shift deleted successfully"
                    },
                    "404": {
                        "description": "Employee shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee-shifts/{id}/check-in": {
            "patch": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Record employee check-in",
                "description": "Mark an employee as checked-in for a shift",
                "operationId": "1abe21e71b4f46b5f96ef0424f14c065",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "check_in": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-09-01 08:05:00"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Arrived slightly late due to traffic"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check-in recorded successfully"
                    },
                    "404": {
                        "description": "Employee shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee-shifts/{id}/check-out": {
            "patch": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Record employee check-out",
                "description": "Mark an employee as checked-out from a shift and optionally record overtime",
                "operationId": "692bd06a1271f7f739f3291c914a4fa8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "check_out": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-09-01 16:15:00"
                                    },
                                    "overtime_hours": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Stayed late to clean kitchen"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check-out recorded successfully"
                    },
                    "404": {
                        "description": "Employee shift not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee-shifts/{id}/status": {
            "patch": {
                "tags": [
                    "Employee Shifts"
                ],
                "summary": "Update employee shift status",
                "description": "Manually update the status or notes of a shift assignment",
                "operationId": "454e9c09c0e82fcbfe11b93bd9c55e74",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Marked as late arrival"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee shift status updated successfully"
                    },
                    "404": {
                        "description": "Employee shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Check API health status",
                "description": "Returns the current status of the API",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant Management System API is running"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "List invoices",
                "description": "Retrieve a paginated list of invoices with optional filters such as table session, status, and total amount range.",
                "operationId": "getInvoices",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (default 15)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "table_session_id",
                        "in": "query",
                        "description": "Filter by table session ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "TS001"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by invoice status (e.g. pending, active, completed, cancel)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "completed"
                        }
                    },
                    {
                        "name": "total_amount_min",
                        "in": "query",
                        "description": "Filter invoices with total amount greater than or equal to this value",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 100000
                        }
                    },
                    {
                        "name": "total_amount_max",
                        "in": "query",
                        "description": "Filter invoices with total amount less than or equal to this value",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 1000000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoices retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "INV001"
                                                            },
                                                            "table_session_id": {
                                                                "type": "string",
                                                                "example": "TS001"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "total_amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 250000
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-13T12:00:00Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-13T13:00:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Create invoice with payment",
                "description": "Tạo invoice kèm payment và áp dụng các khuyến mãi nếu có",
                "operationId": "afab2f2bee05fd353c5d3591b7b34f37",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_session_id": {
                                        "type": "string",
                                        "example": "TS123"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100000
                                    },
                                    "discount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "tax": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "final_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99000
                                    },
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": 2
                                    },
                                    "listPromotionApply": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "promotion_id": {
                                                    "type": "string",
                                                    "example": "PROMO1"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "employee_id": {
                                        "type": "string",
                                        "example": "EMP001"
                                    },
                                    "method": {
                                        "description": "0=Cash, 1=Bank transfer",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "status_payment": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice and payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "invoice": {
                                            "type": "object"
                                        },
                                        "payment": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Table session not found or invalid payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Table session không tồn tại!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice detail with payments",
                "description": "Retrieve an invoice by its ID along with all related payments.",
                "operationId": "getInvoiceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "INV001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice detail retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice detail retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "INV001"
                                                },
                                                "table_session_id": {
                                                    "type": "string",
                                                    "example": "TS001"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 250000
                                                },
                                                "discount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50000
                                                },
                                                "tax": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "final_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 275000
                                                },
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "PM001"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 100000
                                                            },
                                                            "method": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "method_label": {
                                                                "type": "string",
                                                                "example": "Bank Transfer"
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status_label": {
                                                                "type": "string",
                                                                "example": "Completed"
                                                            },
                                                            "paid_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-13T12:00:00Z"
                                                            },
                                                            "employee": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "EMP001"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Nguyen Van A"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/invoices/table-session/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice detail by table session ID",
                "description": "Retrieve the invoice and its payments (with employee info) for a given table session.",
                "operationId": "getInvoiceByTableSession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Table session ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "TS001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice detail retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "INV001"
                                                },
                                                "table_session_id": {
                                                    "type": "string",
                                                    "example": "TS001"
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 250000
                                                },
                                                "discount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50000
                                                },
                                                "tax": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "final_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 275000
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-13T13:00:00Z"
                                                },
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "PM001"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 150000
                                                            },
                                                            "method": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "paid_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-10-13T14:30:00Z"
                                                            },
                                                            "desc_issue": {
                                                                "type": "string",
                                                                "example": null
                                                            },
                                                            "employee": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "EMP001"
                                                                    },
                                                                    "full_name": {
                                                                        "type": "string",
                                                                        "example": "Nguyễn Văn A"
                                                                    },
                                                                    "phone": {
                                                                        "type": "string",
                                                                        "example": "0123456789"
                                                                    },
                                                                    "contract_type": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "base_salary": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 8000000
                                                                    },
                                                                    "is_active": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "created_at": {
                                                                        "type": "string",
                                                                        "format": "date-time",
                                                                        "example": "2025-01-01T08:00:00Z"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice for this table session not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/invoices/{invoice_id}": {
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Pay remaining amount of an invoice",
                "description": "Cập nhật hóa đơn đã từng thanh toán một phần, tạo payment cho phần còn lại",
                "operationId": "a50e39dadfd006cafbd2c468cdac53c4",
                "parameters": [
                    {
                        "name": "invoice_id",
                        "in": "path",
                        "description": "ID của hóa đơn cần thanh toán",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "INV001"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "method": {
                                        "description": "0=Cash, 1=Bank transfer",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    },
                                    "status_payment": {
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "type": "string",
                                        "example": "EMP001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "payment": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invoice not found or invalid payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice không tồn tại!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/menus": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Lấy danh sách menu",
                "operationId": "54c2d937e1a32b13f880b49ce0444f34",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Trang hiện tại",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Số item mỗi trang",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Tìm theo tên menu (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Thực đơn mùa hè"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách menu"
                    }
                }
            },
            "post": {
                "tags": [
                    "Menus"
                ],
                "summary": "Tạo mới menu",
                "operationId": "31e1ddbd8da961fb496e3e2d46b53823",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "version"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Menu created successfully"
                    }
                }
            }
        },
        "/api/menus/active/items": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Lấy danh sách món ăn của menu đang hoạt động (is_active = 1)",
                "operationId": "44f04f51eeac256e3e8cfc24f3e807f1",
                "responses": {
                    "200": {
                        "description": "Danh sách món ăn của menu đang được sử dụng",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "menu": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "menu_id": {
                                                        "type": "integer"
                                                    },
                                                    "dish_id": {
                                                        "type": "integer"
                                                    },
                                                    "dish_name": {
                                                        "type": "string"
                                                    },
                                                    "price_base": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "dish_image": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "notes": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/menus/{id}": {
            "put": {
                "tags": [
                    "Menus"
                ],
                "summary": "Cập nhật menu",
                "operationId": "88cfe38e1bda9aad62dbca6007b25422",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "integer"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Menu updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Menus"
                ],
                "summary": "Xóa menu",
                "operationId": "e367f4eb9f2883c92645c50bbac63925",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu deleted successfully"
                    }
                }
            }
        },
        "/api/menus/{id}/items": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Lấy danh sách món ăn trong menu",
                "operationId": "fa1d98ce6b45ad9d1df1cf3527805d2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID của menu",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách món ăn thuộc menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "menu_id": {
                                                        "type": "integer"
                                                    },
                                                    "dish_id": {
                                                        "type": "integer"
                                                    },
                                                    "dish_name": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "is_available": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/menus/{menuId}/items": {
            "post": {
                "tags": [
                    "Menus"
                ],
                "summary": "Thêm món ăn vào menu",
                "description": "Tạo mới liên kết giữa menu và món ăn, không cho phép trùng món trong cùng menu",
                "operationId": "985272c57a76ec8d59f279e3b44db36f",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "ID của menu",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dish_id",
                                    "price"
                                ],
                                "properties": {
                                    "dish_id": {
                                        "type": "string",
                                        "example": "D001"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Món thêm topping trứng"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Món ăn được thêm vào menu thành công"
                    },
                    "400": {
                        "description": "Món đã tồn tại trong menu hoặc dữ liệu không hợp lệ"
                    },
                    "404": {
                        "description": "Không tìm thấy menu hoặc món ăn"
                    }
                }
            }
        },
        "/api/menus/{menuId}/items/{itemId}": {
            "put": {
                "tags": [
                    "Menu Items"
                ],
                "summary": "Cập nhật món ăn trong menu",
                "description": "Cập nhật thông tin món ăn (price, notes, dish_id) trong menu.",
                "operationId": "updateMenuItem",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "ID của menu chứa món ăn",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MN001"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "ID của menu item cần cập nhật",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MI001"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dish_id",
                                    "price"
                                ],
                                "properties": {
                                    "dish_id": {
                                        "description": "ID món ăn mới",
                                        "type": "string",
                                        "example": "D001"
                                    },
                                    "price": {
                                        "description": "Giá áp dụng trong menu",
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000
                                    },
                                    "notes": {
                                        "description": "Ghi chú thêm",
                                        "type": "string",
                                        "example": "Món đặc biệt trong tuần",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Menu item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu item updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "MI001"
                                                },
                                                "menu_id": {
                                                    "type": "string",
                                                    "example": "MN001"
                                                },
                                                "dish_id": {
                                                    "type": "string",
                                                    "example": "D001"
                                                },
                                                "dish_name": {
                                                    "type": "string",
                                                    "example": "Cơm chiên hải sản"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 45000
                                                },
                                                "price_base": {
                                                    "type": "number",
                                                    "example": 40000
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Món đặc biệt trong tuần"
                                                },
                                                "dish_image": {
                                                    "type": "string",
                                                    "example": "/uploads/dishes/comchien.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "This dish already exists in the menu."
                    },
                    "404": {
                        "description": "Menu or Menu Item not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Menus"
                ],
                "summary": "Xóa một món ăn khỏi menu",
                "description": "Xóa liên kết giữa món ăn và menu, không xóa món trong cơ sở dữ liệu món ăn",
                "operationId": "dd779c4bd86f0c130f85bbd5b8db4d1e",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "ID của menu",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "ID của món ăn trong menu (menu_item_id)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Xóa món ăn khỏi menu thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Món ăn đã được xóa khỏi menu."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy menu hoặc món trong menu"
                    }
                }
            }
        },
        "/api/menus/{menuId}/available-dishes": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Lấy danh sách món ăn chưa có trong menu",
                "description": "Trả về danh sách các món ăn chưa xuất hiện trong menu để thêm mới",
                "operationId": "f60cf0d9b11bae9f54d109f41679350a",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "ID của menu",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MN001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách món ăn chưa có trong menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Danh sách món ăn chưa có trong menu."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "D001"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cơm chiên hải sản"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "/uploads/dishes/com-chien.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy menu"
                    },
                    "500": {
                        "description": "Lỗi server"
                    }
                }
            }
        },
        "/api/order-items/status": {
            "put": {
                "tags": [
                    "OrderItems"
                ],
                "summary": "Cập nhật trạng thái nhiều OrderItem",
                "operationId": "86819193eab8d421dbdc49414d14712f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "items": {
                                        "description": "Key-value: orderItemId => status",
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "0=Ordered, 1=Cooking, 2=Served, 3=Cancelled",
                                            "type": "integer",
                                            "enum": [
                                                0,
                                                1,
                                                2,
                                                3
                                            ],
                                            "property": null
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order items and order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "OrderItem ID",
                                                "type": "string"
                                            },
                                            "order_id": {
                                                "description": "Order ID",
                                                "type": "string"
                                            },
                                            "status": {
                                                "description": "OrderItem status",
                                                "type": "integer",
                                                "enum": [
                                                    0,
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            },
                                            "quantity": {
                                                "type": "integer"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "total_price": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "notes": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validate lỗi input"
                    },
                    "403": {
                        "description": "Không có quyền"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order-items/add-order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Thêm order mới cùng danh sách món",
                "operationId": "0e972a7824cf82214e994a94dc0f5ed3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "items"
                                ],
                                "properties": {
                                    "order_id": {
                                        "description": "ID của order",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "Danh sách món ăn trong order",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "dish_id",
                                                "name_dish",
                                                "price",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "dish_id": {
                                                    "description": "ID món ăn",
                                                    "type": "string"
                                                },
                                                "name_dish": {
                                                    "description": "Tên món ăn",
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "description": "Đơn giá món",
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "quantity": {
                                                    "description": "Số lượng",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Trạng thái món (0=Open,1=In-progress,2=Served,3=Cancelled)",
                                                    "type": "integer",
                                                    "enum": [
                                                        0,
                                                        1,
                                                        2,
                                                        3
                                                    ],
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order và các món đã được tạo thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "order": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "integer"
                                                        },
                                                        "total_amount": {
                                                            "type": "number",
                                                            "format": "float"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "OrderItem ID",
                                                                "type": "string"
                                                            },
                                                            "dish_id": {
                                                                "type": "string"
                                                            },
                                                            "name_dish": {
                                                                "type": "string"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "quantity": {
                                                                "type": "integer"
                                                            },
                                                            "total_price": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "enum": [
                                                                    0,
                                                                    1,
                                                                    2,
                                                                    3
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order và các món đã được tạo thành công."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validate lỗi input"
                    },
                    "403": {
                        "description": "Không có quyền"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payrolls": {
            "get": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "List payrolls",
                "description": "Retrieve a paginated list of payrolls with filters for employee, status, month, and year",
                "operationId": "e3ca93f56a5fcb7c7bbe06952f031646",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Filter by employee ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payroll status",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Filter by payroll month",
                        "schema": {
                            "type": "integer",
                            "maximum": 12,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter by payroll year",
                        "schema": {
                            "type": "integer",
                            "example": 2025
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payrolls retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payrolls/{id}": {
            "get": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "Show payroll",
                "description": "Retrieve detailed information about a specific payroll, including items and approver",
                "operationId": "fc3df33a415ab32429807fc16d29fb51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll retrieved successfully"
                    },
                    "404": {
                        "description": "Payroll not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "Update payroll",
                "description": "Update base salary, bonus, deductions, or metadata for a payroll",
                "operationId": "3820c2edaeac5475754738f3dafaa4a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "base_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2500
                                    },
                                    "bonus": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150
                                    },
                                    "deductions": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Adjusted for performance bonus"
                                    },
                                    "payment_method": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payroll updated successfully"
                    },
                    "404": {
                        "description": "Payroll not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payrolls/generate": {
            "post": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "Generate payrolls",
                "description": "Generate payrolls for active employees for a specific month and year",
                "operationId": "4cbaf5c142dd64ef5e277121e500a7f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "month",
                                    "year"
                                ],
                                "properties": {
                                    "month": {
                                        "type": "integer",
                                        "maximum": 12,
                                        "minimum": 1,
                                        "example": 9
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2025
                                    },
                                    "employee_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "EMP001",
                                            "EMP005"
                                        ]
                                    },
                                    "overwrite": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payroll generation completed"
                    },
                    "404": {
                        "description": "No employees found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payrolls/{id}/status": {
            "patch": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "Update payroll status",
                "description": "Change the status of a payroll record and optionally update notes",
                "operationId": "90f252a104001bccc53bcdae4c6d6b9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Pending accounting review"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payroll status updated successfully"
                    },
                    "404": {
                        "description": "Payroll not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payrolls/{id}/pay": {
            "patch": {
                "tags": [
                    "Payrolls"
                ],
                "summary": "Mark payroll as paid",
                "description": "Record payment details for a payroll and mark it as paid",
                "operationId": "35127b57976a11cdcdbae5aaa5b8a67b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_method"
                                ],
                                "properties": {
                                    "payment_method": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_ref": {
                                        "type": "string",
                                        "example": "BANK-20240930"
                                    },
                                    "paid_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-09-30 10:15:00"
                                    },
                                    "paid_by": {
                                        "type": "string",
                                        "example": "EMP001"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Transferred via bank"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payroll paid successfully"
                    },
                    "404": {
                        "description": "Payroll not found"
                    },
                    "409": {
                        "description": "Payroll already marked as paid"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payroll-items": {
            "get": {
                "tags": [
                    "Payroll Items"
                ],
                "summary": "List payroll items",
                "description": "Retrieve a paginated list of payroll items with optional filters",
                "operationId": "e5d34a84fd71642caefb4562f15fd85e",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "payroll_id",
                        "in": "query",
                        "description": "Filter by payroll ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item_type",
                        "in": "query",
                        "description": "Filter by item type (0=earning, 1=deduction)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Filter by item code",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll items retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payroll Items"
                ],
                "summary": "Create payroll item",
                "description": "Add an earning or deduction item to a payroll",
                "operationId": "cb644481d41885e7e42304b9c5c96678",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payroll_id",
                                    "item_type",
                                    "code",
                                    "amount"
                                ],
                                "properties": {
                                    "payroll_id": {
                                        "type": "string",
                                        "example": "PAY001"
                                    },
                                    "item_type": {
                                        "description": "0=earning, 1=deduction",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "BONUS"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Performance bonus"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payroll item created successfully"
                    },
                    "404": {
                        "description": "Payroll not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payroll-items/{id}": {
            "get": {
                "tags": [
                    "Payroll Items"
                ],
                "summary": "Show payroll item",
                "description": "Retrieve details for a specific payroll item",
                "operationId": "7c2fc4b2e4e34698c4af8eff32cd3c9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll item ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll item retrieved successfully"
                    },
                    "404": {
                        "description": "Payroll item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payroll Items"
                ],
                "summary": "Update payroll item",
                "description": "Update amount, code, or description for a payroll item",
                "operationId": "225b1929f3c9a25a5b4e540b8afe3263",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll item ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "item_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "MEAL_DED"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Meal plan deduction"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payroll item updated successfully"
                    },
                    "404": {
                        "description": "Payroll item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payroll Items"
                ],
                "summary": "Delete payroll item",
                "description": "Remove a payroll item and recalculate the payroll total",
                "operationId": "41fd9dce7828b7a0402164dad5081725",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payroll item ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll item deleted successfully"
                    },
                    "404": {
                        "description": "Payroll item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all permissions",
                "description": "Retrieve all permissions with pagination",
                "operationId": "a49af5d462a91e9996aa5342b6de4ddd",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search permissions by name or code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "P001"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Manage Users"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "example": "users.manage"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Can manage user accounts"
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission by ID",
                "description": "Retrieve a specific permission by ID",
                "operationId": "16db55c19d22dca89994e416d7dd28be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "P001"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Manage Users"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "users.manage"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Can manage user accounts"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permissions/{id}/roles": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get roles assigned to permission",
                "description": "Get all roles that have this permission",
                "operationId": "03f46c7ef4b7421346f803280ca4ea0e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roles retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "R001"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Admin"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "System administrator"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotions": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "List promotions",
                "description": "Retrieve a paginated list of promotions with optional filters such as code, description, discount percent, and active status.",
                "operationId": "getPromotions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Filter by promotion code (partial match)",
                        "schema": {
                            "type": "string",
                            "example": "SALE10"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "Filter by description (partial match)",
                        "schema": {
                            "type": "string",
                            "example": "Giảm 10%"
                        }
                    },
                    {
                        "name": "discount_percent",
                        "in": "query",
                        "description": "Filter by exact discount percent",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 10
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promotions retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "PROMO001"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "example": "SALE10"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Giảm 10% cho đơn hàng đầu tiên"
                                                            },
                                                            "discount_percent": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 10
                                                            },
                                                            "usage_limit": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "used_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "start_date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-01-01T00:00:00Z"
                                                            },
                                                            "end_date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-12-31T23:59:59Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Create new promotion",
                "operationId": "72d75eb4a0d6e3b20312f608356b5859",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "discount_value",
                                    "start_at",
                                    "end_at"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Promo 10%"
                                    },
                                    "discount_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Promotion created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotions/{id}": {
            "put": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Update promotion",
                "operationId": "7c2fcdfd3d51b459942ad6f340019160",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Promo"
                                    },
                                    "discount_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promotion updated successfully"
                    },
                    "404": {
                        "description": "Promotion not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Delete promotion",
                "operationId": "a86a476fa987ed93c3131839806edab0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotion deleted successfully"
                    },
                    "404": {
                        "description": "Promotion not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotions/all": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get all active promotions (no pagination)",
                "description": "Retrieve all active promotions that have not reached their usage limit",
                "operationId": "getAllActivePromotions",
                "responses": {
                    "200": {
                        "description": "Active promotions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promotions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "PROMO001"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Khuyến mãi 10%"
                                                    },
                                                    "discountValue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Lấy danh sách đặt bàn",
                "operationId": "f10e68ff0ce263ef754b2f640eda8d93",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Trang hiện tại",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Số item mỗi trang",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Trạng thái đặt bàn: 0=Pending, 1=Confirmed, 2=Cancelled, 3=Completed",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "Tìm theo tên khách hàng (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách reservations với thông tin customer"
                    }
                }
            }
        },
        "/api/reservations/{id}/status": {
            "put": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Cập nhật trạng thái đặt bàn",
                "description": "Cho phép admin hoặc nhân viên có quyền thay đổi trạng thái của một đặt bàn (Pending, Confirmed, Cancelled, Completed)",
                "operationId": "22307caa3c7236c3cc24e3f0ea4f30bb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID của reservation cần cập nhật",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Trạng thái mới: 0=Pending, 1=Confirmed, 2=Cancelled, 3=Completed",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "notes": {
                                        "description": "Ghi chú (tùy chọn)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cập nhật trạng thái thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Giá trị status không hợp lệ hoặc không thể cập nhật",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/check-assigned-tables": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Kiểm tra các đặt bàn đã được xếp bàn hay chưa",
                "description": "Lấy danh sách các reservation có status = 1 (Confirmed), kiểm tra xem đã có bàn được xếp hay chưa thông qua các bảng liên kết table_session_reservations và table_session_dining_table.",
                "operationId": "54c53f81cf41d9b97f1ccecfd58249a7",
                "responses": {
                    "200": {
                        "description": "Danh sách reservation và trạng thái đã/ chưa xếp bàn",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Check completed successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "reservation_id": {
                                                        "type": "string",
                                                        "example": "abc123"
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "Nguyễn Văn A"
                                                    },
                                                    "session_id": {
                                                        "type": "string",
                                                        "example": "sess001",
                                                        "nullable": true
                                                    },
                                                    "table_name": {
                                                        "type": "string",
                                                        "example": "Bàn 5",
                                                        "nullable": true
                                                    },
                                                    "assigned": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Không có quyền truy cập API này",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "List roles",
                "description": "Retrieve a paginated list of roles with optional filters",
                "operationId": "ca86f0a206144dfbd695b749b4b28f9d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by role name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create new role",
                "description": "Create a new role",
                "operationId": "341b8b162b61267c7bd187500aea5bc4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Restaurant Manager Role"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "permissions": {
                                        "description": "Array of permission IDs to assign to role",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "PERM1",
                                            "PERM2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by ID",
                "description": "Retrieve a specific role with permissions",
                "operationId": "15c404caf238f1861c81f68205d328e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "R001"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Admin"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "System administrator"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "P001"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Manage Users"
                                                            },
                                                            "code": {
                                                                "type": "string",
                                                                "example": "users.manage"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "description": "Update an existing role",
                "operationId": "c73ab816ae8fb7c34a995d37ba577082",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Restaurant Manager Role"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "PERM1",
                                            "PERM2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "description": "Delete a role",
                "operationId": "ffa6ef115d86b00cc6c54a6210019f9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}/permissions": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role permissions",
                "description": "Get all permissions assigned to a role",
                "operationId": "544e49067ea1110731ca7892b976db7d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign permissions to role",
                "description": "Assign specific permissions to a role",
                "operationId": "849c3c1071e3590a96bdbae84f270ad8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permission_ids"
                                ],
                                "properties": {
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "PERM1",
                                            "PERM2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions assigned successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Remove permissions from role",
                "description": "Remove specific permissions from a role",
                "operationId": "561b6573b056efff67165c59238b0a4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permission_ids"
                                ],
                                "properties": {
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "PERM1",
                                            "PERM2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions removed successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}/permissions/sync": {
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Sync role permissions",
                "description": "Replace all role permissions with the provided list",
                "operationId": "b734c9c22a988864de993b49bb9396fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permission_ids"
                                ],
                                "properties": {
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "PERM1",
                                            "PERM2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions synced successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}/users": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role users",
                "description": "Get all users assigned to a role",
                "operationId": "41a42086ba46616ab51b1f58e6b3b531",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "U001"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "john_doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shifts": {
            "get": {
                "tags": [
                    "Shifts"
                ],
                "summary": "List shifts",
                "description": "Retrieve a paginated list of shifts with optional date and time filters",
                "operationId": "2b37ae349973fabb23781d7a24489578",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by shift name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shift_date",
                        "in": "query",
                        "description": "Filter by specific shift date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "shift_date_from",
                        "in": "query",
                        "description": "Filter shifts from date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "shift_date_to",
                        "in": "query",
                        "description": "Filter shifts to date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "start_time_from",
                        "in": "query",
                        "description": "Filter shifts starting after or at this time (HH:MM)",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\\\d{2}:\\\\d{2}$"
                        }
                    },
                    {
                        "name": "start_time_to",
                        "in": "query",
                        "description": "Filter shifts starting before or at this time (HH:MM)",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\\\d{2}:\\\\d{2}$"
                        }
                    },
                    {
                        "name": "end_time_from",
                        "in": "query",
                        "description": "Filter shifts ending after or at this time (HH:MM)",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\\\d{2}:\\\\d{2}$"
                        }
                    },
                    {
                        "name": "end_time_to",
                        "in": "query",
                        "description": "Filter shifts ending before or at this time (HH:MM)",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\\\d{2}:\\\\d{2}$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shifts retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Create shift",
                "description": "Create a new shift with name, date (optional), and working timeframe",
                "operationId": "0779dbf1996b054031291aba6ea78fa7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Morning Shift"
                                    },
                                    "shift_date": {
                                        "description": "Optional shift date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-06"
                                    },
                                    "start_time": {
                                        "description": "Format: HH:MM",
                                        "type": "string",
                                        "example": "08:00"
                                    },
                                    "end_time": {
                                        "description": "Format: HH:MM",
                                        "type": "string",
                                        "example": "16:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shift created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shifts/{id}": {
            "get": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Show shift",
                "description": "Retrieve details for a specific shift",
                "operationId": "6201d1ade6ba5699af31600f966885d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift retrieved successfully"
                    },
                    "404": {
                        "description": "Shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Update shift",
                "description": "Update an existing shift's details including date, name, and time",
                "operationId": "b26730cfb5e0bcb5feed6aa8658be51e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Morning Shift"
                                    },
                                    "shift_date": {
                                        "description": "Shift date (nullable)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-10-06"
                                    },
                                    "start_time": {
                                        "description": "Format: HH:MM",
                                        "type": "string",
                                        "example": "08:00"
                                    },
                                    "end_time": {
                                        "description": "Format: HH:MM",
                                        "type": "string",
                                        "example": "17:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shift updated successfully"
                    },
                    "404": {
                        "description": "Shift not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shifts"
                ],
                "summary": "Delete shift",
                "description": "Remove a shift if it's not assigned to employees",
                "operationId": "b1c98dc770727b3091d8462bbea6801e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shift ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift deleted successfully"
                    },
                    "400": {
                        "description": "Shift is assigned to employees"
                    },
                    "404": {
                        "description": "Shift not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Danh sách bàn + phiên bàn",
                "operationId": "7f4fcb1b3ce8c55e2cd6b05c928457a7",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách bàn và phiên bàn",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dining_table_id": {
                                                        "type": "integer"
                                                    },
                                                    "table_number": {
                                                        "type": "string"
                                                    },
                                                    "capacity": {
                                                        "type": "integer"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean"
                                                    },
                                                    "session_id": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    },
                                                    "session_type": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "session_status": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "started_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "ended_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions/{tableSession}": {
            "put": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Cập nhật trạng thái table session",
                "description": "Cập nhật trạng thái table session thành 'đang phục vụ' (1)",
                "operationId": "c3e99014f1103fc001f55aa4725913fd",
                "parameters": [
                    {
                        "name": "tableSession",
                        "in": "path",
                        "description": "ID của table session cần cập nhật",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cập nhật thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "TS123"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Table session status updated to active"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Table session không tồn tại",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Table session not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Lỗi server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/table-sessions/reservation": {
            "post": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Tạo mới Table Session kiểu reservation",
                "description": "Tạo một phiên bàn mới với type = 2 (reservation) và status = 0 (đang chờ), kèm liên kết với reservation.",
                "operationId": "createTableSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "employee_id",
                                    "reservation_id"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "ID của khách hàng",
                                        "type": "string",
                                        "example": "CUST123"
                                    },
                                    "employee_id": {
                                        "description": "ID của nhân viên tạo phiên",
                                        "type": "string",
                                        "example": "EMP456"
                                    },
                                    "reservation_id": {
                                        "description": "ID của reservation liên kết",
                                        "type": "string",
                                        "example": "RES789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tạo thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "TS001"
                                                },
                                                "type": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "customer_id": {
                                                    "type": "string",
                                                    "example": "CUST123"
                                                },
                                                "employee_id": {
                                                    "type": "string",
                                                    "example": "EMP456"
                                                },
                                                "reservation_id": {
                                                    "type": "string",
                                                    "example": "RES789"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation lỗi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The customer_id field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/table-sessions/available-tables": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Lấy danh sách bàn trống cho thời gian đặt cụ thể",
                "description": "Trả về danh sách các bàn còn trống dựa trên thời gian đặt (reserved_at) và số lượng khách (number_of_people). Một bàn được xem là bận nếu có phiên bàn đang hoạt động (status IN 1,2) và thời gian đặt nằm trong khoảng phục vụ của bàn.",
                "operationId": "getAvailableTables",
                "parameters": [
                    {
                        "name": "reserved_at",
                        "in": "query",
                        "description": "Thời gian đặt bàn (YYYY-MM-DD HH:mm:ss)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-10-07 13:00:00"
                        }
                    },
                    {
                        "name": "number_of_people",
                        "in": "query",
                        "description": "Số lượng khách",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách bàn trống",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "table_number": {
                                                "type": "integer"
                                            },
                                            "capacity": {
                                                "type": "integer"
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Thiếu hoặc sai dữ liệu đầu vào",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions/{idDiningTable}": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Lấy thông tin phiên bàn theo Dining Table ID",
                "description": "Trả về phiên bàn (status = 1 - đang phục vụ) kèm thông tin đặt chỗ và khách hàng",
                "operationId": "2d41227436fb0e2dde096a0431e26a30",
                "parameters": [
                    {
                        "name": "idDiningTable",
                        "in": "path",
                        "description": "ID của Dining Table (ví dụ: DT4PP4X0GT)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thông tin phiên bàn lấy thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Table session retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "dining_table_id": {
                                                    "type": "string",
                                                    "example": "DT4PP4X0GT"
                                                },
                                                "session_id": {
                                                    "type": "string",
                                                    "example": "TS12345"
                                                },
                                                "session_type": {
                                                    "description": "0=Offline, 1=Online",
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "session_status": {
                                                    "description": "1=Active",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-10-02T08:30:00Z"
                                                },
                                                "ended_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "reservation_number_of_people": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "reservation_notes": {
                                                    "type": "string",
                                                    "example": "Near window"
                                                },
                                                "customer_id": {
                                                    "type": "string",
                                                    "example": "CUS001"
                                                },
                                                "customer_name": {
                                                    "type": "string",
                                                    "example": "Nguyen Van A"
                                                },
                                                "customer_gender": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "customer_phone": {
                                                    "type": "string",
                                                    "example": "0901234567"
                                                },
                                                "customer_address": {
                                                    "type": "string",
                                                    "example": "123 Le Loi, District 1, HCMC"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy phiên bàn đang phục vụ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Không tìm thấy phiên bàn đang phục vụ cho Dining Table: DT4PP4X0GT"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions/{idDiningTable}/session-pending": {
            "get": {
                "tags": [
                    "DiningTables"
                ],
                "summary": "Lấy các phiên bàn đang chờ theo Dining Table",
                "description": "Trả về danh sách các phiên bàn có trạng thái đang chờ (status = 0), kèm thông tin reservation nếu có",
                "operationId": "getActiveTableSessions",
                "parameters": [
                    {
                        "name": "idDiningTable",
                        "in": "path",
                        "description": "ID của dining table",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active sessions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "session_id": {
                                                "type": "string"
                                            },
                                            "table_id": {
                                                "type": "string"
                                            },
                                            "table_number": {
                                                "type": "string"
                                            },
                                            "session_type": {
                                                "description": "0-Offline,1-Merge,2-Reservation,3-Split",
                                                "type": "integer"
                                            },
                                            "session_status": {
                                                "description": "0-Active",
                                                "type": "integer"
                                            },
                                            "started_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "customer_id": {
                                                "type": "string"
                                            },
                                            "employee_id": {
                                                "type": "string"
                                            },
                                            "reservation": {
                                                "properties": {
                                                    "reservation_id": {
                                                        "type": "string"
                                                    },
                                                    "reservation_customer_id": {
                                                        "type": "string"
                                                    },
                                                    "reservation_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "number_of_people": {
                                                        "type": "integer"
                                                    },
                                                    "reservation_status": {
                                                        "description": "0-Pending,1-Confirmed,...",
                                                        "type": "integer"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy phiên bàn đang hoạt động",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions/{tableSessionId}/orders": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Lấy danh sách Order theo Table Session ID",
                "description": "Trả về danh sách order và chi tiết order_items kèm thông tin món ăn và category",
                "operationId": "5fbb40ec6a3894df1ce8677634023255",
                "parameters": [
                    {
                        "name": "tableSessionId",
                        "in": "path",
                        "description": "ID của Table Session (ví dụ: TSPC3JAEON)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Danh sách order lấy thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Orders retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "string",
                                                        "example": "O123"
                                                    },
                                                    "table_session_id": {
                                                        "type": "string",
                                                        "example": "TSPC3JAEON"
                                                    },
                                                    "order_status": {
                                                        "description": "0=Open, 1=In-Progress, 2=Served, 3=Paid, 4=Cancelled",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 350000
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "order_item_id": {
                                                                    "type": "string",
                                                                    "example": "OI001"
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                },
                                                                "item_price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 120000
                                                                },
                                                                "total_price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 240000
                                                                },
                                                                "item_status": {
                                                                    "description": "0=Ordered, 1=Cooking, 2=Served, 3=Cancelled",
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "notes": {
                                                                    "type": "string",
                                                                    "example": "Less spicy"
                                                                },
                                                                "prepared_by": {
                                                                    "type": "string",
                                                                    "example": "EMP001"
                                                                },
                                                                "served_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2025-10-02T08:45:00Z"
                                                                },
                                                                "cancelled_reason": {
                                                                    "type": "string",
                                                                    "example": null
                                                                },
                                                                "dish": {
                                                                    "properties": {
                                                                        "dish_id": {
                                                                            "type": "string",
                                                                            "example": "D123"
                                                                        },
                                                                        "dish_name": {
                                                                            "type": "string",
                                                                            "example": "Fried Rice"
                                                                        },
                                                                        "dish_price": {
                                                                            "type": "number",
                                                                            "example": 120000
                                                                        },
                                                                        "dish_desc": {
                                                                            "type": "string",
                                                                            "example": "Delicious fried rice"
                                                                        },
                                                                        "cooking_time": {
                                                                            "type": "integer",
                                                                            "example": 15
                                                                        },
                                                                        "image": {
                                                                            "type": "string",
                                                                            "example": "/images/fried_rice.png"
                                                                        },
                                                                        "dish_active": {
                                                                            "type": "boolean",
                                                                            "example": true
                                                                        },
                                                                        "category_name": {
                                                                            "type": "string",
                                                                            "example": "Main Course"
                                                                        },
                                                                        "category_desc": {
                                                                            "type": "string",
                                                                            "example": "Main course dishes"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy orders cho Table Session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Không tìm thấy orders cho Table Session: TSPC3JAEON"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/table-sessions/{idDiningTable}/session-history/{sessionId}": {
            "get": {
                "tags": [
                    "TableSessions"
                ],
                "summary": "Xem lịch sử chi tiết một phiên bàn",
                "description": "Trả về tất cả thông tin liên quan tới một phiên bàn: bàn, reservation, khách hàng, orders và món ăn",
                "operationId": "getTableSessionDetail",
                "parameters": [
                    {
                        "name": "idDiningTable",
                        "in": "path",
                        "description": "ID của bàn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "ID của phiên bàn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chi tiết phiên bàn",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy phiên bàn",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Không tìm thấy phiên bàn"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve all users with pagination",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "U001"
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "john_doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "status": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a specific user by ID",
                "operationId": "6f51bd5fa2dddcd25e44cfa53dcbd10a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "U001"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "john_doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Update an existing user",
                "operationId": "070e37fc9aff78ae73860751bc990ed3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role_id": {
                                        "type": "string",
                                        "example": "ROLE123"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "U001"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "john_doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user",
                "operationId": "0b4133ed462528a5e648b88ead11e929",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT token in format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "Customers",
            "description": "API Endpoints for Customer Management"
        },
        {
            "name": "DiningTables",
            "description": "API Endpoints for Dining Table Management"
        },
        {
            "name": "DishCategories",
            "description": "API Endpoints for Dish Category Management"
        },
        {
            "name": "Dishes",
            "description": "API Endpoints for Dish Management"
        },
        {
            "name": "Employees",
            "description": "API Endpoints for Employee Management"
        },
        {
            "name": "Employee Shifts",
            "description": "API Endpoints for Employee Shift Assignments"
        },
        {
            "name": "Menus",
            "description": "API Endpoints for Menu Management"
        },
        {
            "name": "Payrolls",
            "description": "API Endpoints for Payroll Management"
        },
        {
            "name": "Payroll Items",
            "description": "API Endpoints for Payroll Item Management"
        },
        {
            "name": "Permissions",
            "description": "API Endpoints for Permission Management"
        },
        {
            "name": "Roles",
            "description": "API Endpoints for Role Management"
        },
        {
            "name": "Shifts",
            "description": "API Endpoints for Shift Management"
        },
        {
            "name": "Users",
            "description": "API Endpoints for User Management"
        },
        {
            "name": "TableSessions",
            "description": "TableSessions"
        },
        {
            "name": "Health",
            "description": "Health"
        },
        {
            "name": "Invoices",
            "description": "Invoices"
        },
        {
            "name": "Menu Items",
            "description": "Menu Items"
        },
        {
            "name": "OrderItems",
            "description": "OrderItems"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Promotions",
            "description": "Promotions"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        }
    ]
}